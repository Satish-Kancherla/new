{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-zinc-200 bg-white px-3 py-2 text-base ring-offset-white placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-zinc-950 focus-visible:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0aACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border-2 border-zinc-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-zinc-500 focus:border-blue-500 focus:outline-none focus:ring-0 focus:ring-zinc-950 focus:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:placeholder:text-zinc-400 dark:focus:ring-zinc-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-zinc-200 bg-white text-zinc-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-zinc-100 dark:bg-zinc-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/app/comp/PatientForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"@/hooks/use-toast\";\r\nimport { ToastAction } from \"@/components/ui/toast\";\r\n\r\n// Define Zod Schema for Validation\r\nconst patientFormSchema = z.object({\r\n    patientName: z.string().min(1, \"Patient Name is required\"),\r\n    age: z.string().regex(/^\\d+$/, \"Age must be a number\"),\r\n    gender: z.string().min(1, \"Gender is required\"),\r\n    reference: z.string().min(1, \"Reference is required\"),\r\n    regDate: z.string().refine((date) => !isNaN(Date.parse(date)), {\r\n        message: \"Invalid date format\",\r\n    }),\r\n    phone: z.string().regex(/^\\d{10}$/, \"Phone number must be 10 digits\"),\r\n    weight: z.string().regex(/^\\d+$/, \"Weight must be a number\"),\r\n    temperature: z.string().regex(/^\\d+(\\.\\d+)?$/, \"Temperature must be a number\"),\r\n    pulse: z.string().regex(/^\\d+$/, \"Pulse must be a number\"),\r\n    caseType: z.string().min(1, \"Case Type is required\"),\r\n    doctorName: z.string().min(1, \"Doctor Name is required\"),\r\n    problem: z.string().min(1, \"Problem is required\"),\r\n    //   clinicalNotes: z.string().min(1, \"Clinical Notes are required\"),\r\n    //   treatment: z.string().min(1, \"Treatment details are required\"),\r\n});\r\n\r\n// Define TypeScript type from Zod Schema\r\ntype PatientFormData = z.infer<typeof patientFormSchema>;\r\n\r\nexport default function PatientForm() {\r\n    const router = useRouter();\r\n\r\n    const {\r\n        register,\r\n        control,\r\n        reset,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = useForm<PatientFormData>({\r\n        resolver: zodResolver(patientFormSchema),\r\n    });\r\n\r\n    const onSubmit = async (formData: PatientFormData) => {\r\n        console.log(\"Form data:\", formData);\r\n        try {\r\n            await axios\r\n                .post(\"/api/medical-records\", formData)\r\n\r\n                .then((response) => {\r\n                    console.log(\"Record created successfully\");\r\n                    console.log(response.data);\r\n                    // router.push(`/medical-records/${response.data.id}`);\r\n\r\n                    toast({\r\n                        title: \"Record created successfully\",\r\n                        description: \"\",\r\n                        action: <ToastAction onClick={() => (router.push(`/medical-records/${response.data.id}`))} altText=\"Show\">Show</ToastAction>\r\n                    });\r\n                    reset();\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.error(\"Error creating record:\", error);\r\n                });\r\n        } catch (error: any) {\r\n            console.error(\"Error:\", error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 max-w-xl mx-auto border border-gray-300 p-4 rounded-lg shadow\">\r\n            <div className=\"flex justify-center mb-5\">\r\n                <h1 className=\"font-semibold text-xl\">Patient Form</h1>\r\n            </div>\r\n\r\n            {/* Form Fields */}\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n                {/* Patient Name */}\r\n                <div>\r\n                    <Label htmlFor=\"patientName\">Patient Name</Label>\r\n                    <Input id=\"patientName\" {...register(\"patientName\")} />\r\n                    {errors.patientName && <p className=\"text-red-500\">{errors.patientName.message}</p>}\r\n                </div>\r\n\r\n                {/* Age */}\r\n                <div>\r\n                    <Label htmlFor=\"age\">Age</Label>\r\n                    <Input id=\"age\" {...register(\"age\")} />\r\n                    {errors.age && <p className=\"text-red-500\">{errors.age.message}</p>}\r\n                </div>\r\n\r\n                {/* Gender */}\r\n                <div>\r\n                    <Label htmlFor=\"gender\">Gender</Label>\r\n                    <Controller\r\n                        name=\"gender\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                <SelectTrigger id=\"gender\">\r\n                                    <SelectValue placeholder=\"Select gender\" />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                    <SelectItem value=\"male\">Male</SelectItem>\r\n                                    <SelectItem value=\"female\">Female</SelectItem>\r\n                                    <SelectItem value=\"other\">Other</SelectItem>\r\n                                </SelectContent>\r\n                            </Select>\r\n                        )}\r\n                    />\r\n                    {errors.gender && <p className=\"text-red-500\">{errors.gender.message}</p>}\r\n                </div>\r\n\r\n                {/* Reference */}\r\n                <div>\r\n                    <Label htmlFor=\"reference\">Reference</Label>\r\n                    <Input id=\"reference\" {...register(\"reference\")} />\r\n                    {errors.reference && <p className=\"text-red-500\">{errors.reference.message}</p>}\r\n                </div>\r\n\r\n                {/* Registration Date */}\r\n                <div>\r\n                    <Label htmlFor=\"regDate\">Registration Date</Label>\r\n                    <Input id=\"regDate\" type=\"date\" {...register(\"regDate\")} />\r\n                    {errors.regDate && <p className=\"text-red-500\">{errors.regDate.message}</p>}\r\n                </div>\r\n\r\n                {/* Phone */}\r\n                <div>\r\n                    <Label htmlFor=\"phone\">Phone</Label>\r\n                    <Input id=\"phone\" {...register(\"phone\")} />\r\n                    {errors.phone && <p className=\"text-red-500\">{errors.phone.message}</p>}\r\n                </div>\r\n\r\n                {/* Weight */}\r\n                <div>\r\n                    <Label htmlFor=\"weight\">Weight (kg)</Label>\r\n                    <Input id=\"weight\" {...register(\"weight\")} />\r\n                    {errors.weight && <p className=\"text-red-500\">{errors.weight.message}</p>}\r\n                </div>\r\n\r\n                {/* Temperature */}\r\n                <div>\r\n                    <Label htmlFor=\"temperature\">Temperature (°C)</Label>\r\n                    <Input id=\"temperature\" {...register(\"temperature\")} />\r\n                    {errors.temperature && <p className=\"text-red-500\">{errors.temperature.message}</p>}\r\n                </div>\r\n\r\n                {/* Pulse */}\r\n                <div>\r\n                    <Label htmlFor=\"pulse\">Pulse (bpm)</Label>\r\n                    <Input id=\"pulse\" {...register(\"pulse\")} />\r\n                    {errors.pulse && <p className=\"text-red-500\">{errors.pulse.message}</p>}\r\n                </div>\r\n\r\n                {/* Case Type */}\r\n                <div>\r\n                    <Label htmlFor=\"caseType\">Case Type</Label>\r\n                    <Controller\r\n                        name=\"caseType\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                <SelectTrigger id=\"caseType\">\r\n                                    <SelectValue placeholder=\"Select case type\" />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                    <SelectItem value=\"emergency\">Emergency</SelectItem>\r\n                                    <SelectItem value=\"routine\">Routine</SelectItem>\r\n                                    <SelectItem value=\"followUp\">Follow-up</SelectItem>\r\n                                </SelectContent>\r\n                            </Select>\r\n                        )}\r\n                    />\r\n                    {errors.caseType && <p className=\"text-red-500\">{errors.caseType.message}</p>}\r\n                </div>\r\n\r\n                {/* Doctor Name */}\r\n                <div>\r\n                    <Label htmlFor=\"doctorName\">Doctor Name</Label>\r\n                    <Input id=\"doctorName\" {...register(\"doctorName\")} />\r\n                    {errors.doctorName && <p className=\"text-red-500\">{errors.doctorName.message}</p>}\r\n                </div>\r\n\r\n                {/* Problem */}\r\n                <div className=\"col-span-2\">\r\n                    <Label htmlFor=\"problem\">Problem</Label>\r\n                    <Textarea id=\"problem\" {...register(\"problem\")} />\r\n                    {errors.problem && <p className=\"text-red-500\">{errors.problem.message}</p>}\r\n                </div>\r\n\r\n                {/* Clinical Notes */}\r\n                {/* <div className=\"col-span-2\">\r\n          <Label htmlFor=\"clinicalNotes\">Clinical Notes</Label>\r\n          <Textarea id=\"clinicalNotes\" {...register(\"clinicalNotes\")} />\r\n          {errors.clinicalNotes && <p className=\"text-red-500\">{errors.clinicalNotes.message}</p>}\r\n        </div> */}\r\n\r\n                {/* Treatment */}\r\n                {/* <div className=\"col-span-2\">\r\n          <Label htmlFor=\"treatment\">Treatment</Label>\r\n          <Textarea id=\"treatment\" {...register(\"treatment\")} />\r\n          {errors.treatment && <p className=\"text-red-500\">{errors.treatment.message}</p>}\r\n        </div>*/}\r\n            </div>\r\n\r\n            <Button type=\"submit\" disabled={isSubmitting} className=\"w-full\">\r\n                {isSubmitting ? \"Submitting...\" : \"Submit\"}\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}