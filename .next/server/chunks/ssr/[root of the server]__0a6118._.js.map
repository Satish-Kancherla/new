{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-zinc-200 bg-white px-3 py-2 text-base ring-offset-white placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-zinc-950 focus-visible:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0aACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Practice-2/new/src/app/medical-records/update/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { format, parseISO } from \"date-fns\";\r\n\r\nexport default function UpdatePatient() {\r\n    const router = useRouter();\r\n    const { id } = useParams();\r\n\r\n    const [patient, setPatient] = useState({\r\n        patientName: \"\",\r\n        age: \"\",\r\n        gender: \"\",\r\n        reference: \"\",\r\n        regDate: \"\",\r\n        phone: \"\",\r\n        weight: \"\",\r\n        temperature: \"\",\r\n        pulse: \"\",\r\n        caseType: \"\",\r\n        doctorName: \"\",\r\n        problem: \"\",\r\n        clinicalNotes: \"\",\r\n        treatment: \"\",\r\n    });\r\n\r\n    const [loading, setLoading] = useState(true); \r\n\r\n    useEffect(() => {\r\n        const fetchPatient = async () => {\r\n            try {\r\n                const response = await fetch(`/api/medical-records/${id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch patient data');\r\n                }\r\n                const data = await response.json();\r\n                setPatient({\r\n                    ...data,\r\n                    regDate: format(parseISO(data.regDate), \"yyyy-MM-dd\"),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch patient data:\", error);\r\n                // setError(\"Failed to load patient data. Please try again.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        if (id) {\r\n            fetchPatient();\r\n        }\r\n    }, [id]);\r\n\r\n    const handleUpdate = async () => {\r\n        try {\r\n            await fetch(`/api/medical-records/${id}`, {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(patient),\r\n            })\r\n            .then(() =>{\r\n                // router.push(\"/patients\");\r\n            });\r\n            \r\n        } catch (error) {\r\n            console.error(\"Failed to update patient data:\", error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPatient({ ...patient, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // const handleChangeDate = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    //     console.log(format(e.target.value, \"yyyy-MM-dd\"));\r\n    //     setPatient({ ...patient, [e.target.name]: format(e.target.value, \"yyyy-MM-dd\") });\r\n    // };\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>; // Show loading indicator while fetching data\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-1  justify-center items-center\">\r\n            <form className=\"space-y-4 my-5 max-w-xl mx-auto border border-gray-300 p-4 rounded-lg shadow\">\r\n            <h1 className=\"text-lg font-semibold flex justify-center\">Update Patient Details</h1>\r\n                <div className=\"grid grid-cols-2 gap-5\">\r\n                    <div>\r\n                        <Label htmlFor=\"patientName\">Patient Name</Label>\r\n                        <Input id=\"patientName\" name=\"patientName\" value={patient.patientName} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"age\">Age</Label>\r\n                        <Input id=\"age\" name=\"age\" value={patient.age} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"gender\">Gender</Label>\r\n                        <Input id=\"gender\" name=\"gender\" value={patient.gender} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"reference\">Reference</Label>\r\n                        <Input id=\"reference\" name=\"reference\" value={patient.reference} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"regDate\">Registration Date</Label>\r\n                        <Input id=\"regDate\" name=\"regDate\" type=\"date\" value={patient.regDate} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"phone\">Phone</Label>\r\n                        <Input id=\"phone\" name=\"phone\" value={patient.phone} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"weight\">Weight</Label>\r\n                        <Input id=\"weight\" name=\"weight\" value={patient.weight} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"temperature\">Temperature</Label>\r\n                        <Input id=\"temperature\" name=\"temperature\" value={patient.temperature} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"pulse\">Pulse</Label>\r\n                        <Input id=\"pulse\" name=\"pulse\" value={patient.pulse} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"caseType\">Case Type</Label>\r\n                        <Input id=\"caseType\" name=\"caseType\" value={patient.caseType} onChange={handleChange} required />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"doctorName\">Doctor Name</Label>\r\n                        <Input id=\"doctorName\" name=\"doctorName\" value={patient.doctorName} onChange={handleChange} required />\r\n                    </div>\r\n                    <div className=\"col-span-2\">\r\n                        <Label htmlFor=\"problem\">Problem</Label>\r\n                        <Textarea id=\"problem\" name=\"problem\" value={patient.problem } onChange={handleChange} required />\r\n                    </div>\r\n                    <div className=\"col-span-2\">\r\n                        <Label htmlFor=\"clinicalNotes\">Clinical Notes</Label>\r\n                        <Textarea id=\"clinicalNotes\" name=\"clinicalNotes\" value={patient.clinicalNotes } onChange={handleChange}     />\r\n                    </div>\r\n                    <div className=\"col-span-2\">\r\n                        <Label htmlFor=\"treatment\">Medication</Label>\r\n                        <Textarea id=\"treatment\" name=\"treatment\" value={patient.treatment } onChange={handleChange}  />\r\n                    </div>\r\n                </div>\r\n                <Button className=\"my-5 w-full\" type=\"button\" onClick={handleUpdate}>\r\n                    Update\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}